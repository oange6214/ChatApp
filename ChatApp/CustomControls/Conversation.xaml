<UserControl
    x:Class="ChatApp.CustomControls.Conversation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ap="clr-namespace:ChatApp.AttachedProperties"
    xmlns:viewmodels="clr-namespace:ChatApp.ViewModels"
    x:Name="ConversationListUserControl"
    Width="auto"
    Height="auto"
    d:DataContext="{d:DesignInstance viewmodels:MainWindowViewModel,
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="MessageTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Margin" Value="20" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMessageReceived}" Value="True">
                    <Setter Property="Text" Value="{Binding ReceivedMessage}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                    <Setter Property="Text" Value="{Binding SentMessage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ItemTemplate">
            <Button>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Height" Value="auto" />
                        <Setter Property="Padding" Value="4,1" />
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        x:Name="border"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True">

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <!--  Reply Bubble  -->
                                                <RowDefinition Height="auto" />

                                                <!--  Message Bubble  -->
                                                <RowDefinition />

                                                <!--  Message Time  -->
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>

                                            <!--  Reply Bubble  -->

                                            <!--  Message Bubble  -->
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <!--  Reply Bubble  -->
                                                    <ColumnDefinition Width="auto" />

                                                    <!--  Message Bubble Body  -->
                                                    <ColumnDefinition />

                                                    <!--  Reply Button  -->
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>

                                                <!--  Message Bubble Body  -->
                                                <Border
                                                    Grid.Column="1"
                                                    Width="auto"
                                                    Height="auto"
                                                    MinHeight="60"
                                                    MaxWidth="800"
                                                    VerticalAlignment="Center">
                                                    <Border.Style>
                                                        <!--  To change color of our bubble on message received and message sent  -->
                                                        <Style TargetType="{x:Type Border}">
                                                            <!--  If message is received  -->
                                                            <Setter Property="CornerRadius" Value="30 30 30 0" />
                                                            <Setter Property="Background" Value="#DCE1DE" />
                                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                                                    <Setter Property="CornerRadius" Value="30 30 0 30" />
                                                                    <Setter Property="Background" Value="#49A078" />
                                                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <!--  Message text  -->
                                                    <!--  DockPanel is used here to expand according to message length and max width is a limit to expand to.  -->
                                                    <DockPanel MaxHeight="700">
                                                        <TextBlock Style="{StaticResource MessageTextStyle}" />
                                                    </DockPanel>
                                                </Border>

                                                <!--  Reply Button  -->
                                                <Button
                                                    x:Name="ReplyButton"
                                                    Grid.Column="2"
                                                    Command="{Binding ElementName=ConversationListUserControl, Path=DataContext.RelayCommand}"
                                                    CommandParameter="{Binding}"
                                                    Content="{StaticResource reply}"
                                                    Style="{StaticResource IconButtonStyle}"
                                                    Visibility="Collapsed" />
                                            </Grid>

                                            <!--  Message Time  -->
                                            <TextBlock
                                                x:Name="messageTime"
                                                Grid.Row="2"
                                                Opacity="0">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="Margin" Value="0,10,20,0" />
                                                        <Style.Triggers>

                                                            <!--  If message is received show time on left bubble  -->
                                                            <DataTrigger Binding="{Binding IsMessageReceived}" Value="True">
                                                                <Setter Property="Text" Value="{Binding MsgReceivedOn}" />
                                                                <Setter Property="HorizontalAlignment" Value="Left" />
                                                            </DataTrigger>

                                                            <!--  else on right  -->
                                                            <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                                                <Setter Property="Text" Value="{Binding MsgSentOn}" />
                                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>

                                    <ControlTemplate.Triggers>

                                        <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                            <Setter TargetName="ReplyButton" Property="Grid.Column" Value="0" />
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </DataTrigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ReplyButton" Property="Visibility" Value="Visible" />

                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="2">
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="messageTime"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To="1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="2">
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="messageTime"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!--
                If you might be thinking why do i set srow definitions to auto in some rows...
                It is because when we want to show our hide any child element in row.
                The row height will be 0 if the child element is hidden such as
                we are going to place searchbox inside this row and we will hide it when no text is inside...
            -->

            <!--  SearchBox Row  -->
            <RowDefinition Height="auto" />

            <!--  Conversation Body  -->
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  Search Box  -->
        <Border
            x:Name="searchBoxBorder"
            Grid.Row="0"
            Height="50"
            Margin="20"
            Background="#DCE1DE"
            CornerRadius="15"
            FocusManager.FocusedElement="{Binding ElementName=searchQuery}">

            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSearchConversationBoxOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=False}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <TextBox
                x:Name="searchQuery"
                Padding="12,0"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Center"
                Background="Transparent"
                BorderThickness="0"
                Text="{Binding SearchConversationText, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding SearchConversationCommand}" />
                    <KeyBinding Key="Esc" Command="{Binding ClearConversationSearchCommand}" />
                </TextBox.InputBindings>
            </TextBox>
        </Border>

        <!--  Body  -->
        <ScrollViewer
            Grid.Row="1"
            ap:ScrollViewerAttachedProperty.AutoScroll="true"
            Background="WhiteSmoke"
            HorizontalScrollBarVisibility="Disabled">

            <ItemsControl
                Margin="15,0,0,0"
                ItemTemplate="{StaticResource ItemTemplate}"
                ItemsSource="{Binding FilteredConversations, UpdateSourceTrigger=PropertyChanged}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ItemsControl.ItemsPanel>
                    <!--  Animation on message item add  -->
                    <ItemsPanelTemplate>
                        <StackPanel>
                            <b:Interaction.Behaviors>
                                <b:FluidMoveBehavior AppliesTo="Children" Duration="0:0:0.25" />
                            </b:Interaction.Behaviors>
                        </StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>