<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Loading our icons  -->

    <!--#region Animation Story Boards-->

    <!--#region Mouse Enter Animation-->

    <Storyboard x:Key="MouseEnterAnimation" SpeedRatio="5">
        <DoubleAnimation Storyboard.TargetProperty="Width" To="16" />
        <DoubleAnimation Storyboard.TargetProperty="Height" To="16" />
    </Storyboard>

    <!--#endregion-->

    <!--#region Mouse Leave Animation-->

    <Storyboard x:Key="MouseLeaveAnimation" SpeedRatio="5">
        <DoubleAnimation Storyboard.TargetProperty="Width" To="14" />
        <DoubleAnimation Storyboard.TargetProperty="Height" To="14" />
    </Storyboard>

    <!--#endregion-->

    <!--#endregion-->

    <!--  Default Style for Path's  -->
    <Style TargetType="{x:Type Path}">
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Fill" Value="Black" />

        <!--  Path Animations  -->
        <Style.Triggers>

            <!--  Animation for icon in Buttons  -->
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource MouseLeaveAnimation}" />
                </DataTrigger.ExitActions>
            </DataTrigger>

            <!--  Animation for icon in Toggle Buttons  -->
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource MouseLeaveAnimation}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Style for buttons with Icon  -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Padding" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="{TemplateBinding Content}"
                            Fill="{TemplateBinding Foreground}"
                            Style="{StaticResource {x:Type Path}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleIconButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Path
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="{TemplateBinding Content}"
                            Fill="{TemplateBinding Foreground}"
                            Style="{StaticResource {x:Type Path}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>