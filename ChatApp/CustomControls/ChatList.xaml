<UserControl
    x:Class="ChatApp.CustomControls.ChatList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ChatApp.Domain.Models;assembly=ChatApp.Domain"
    xmlns:viewmodels="clr-namespace:ChatApp.ViewModels"
    x:Name="ChatListUserControl"
    MinWidth="406"
    d:DataContext="{d:DesignInstance viewmodels:ChatListViewModel,
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <DataTemplate x:Key="ChatButtonItemTemplate">
            <RadioButton GroupName="ChatButton">
                <RadioButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="MinHeight" Value="80" />
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Command" Value="{Binding DataContext.GetSelectedChatCommand, ElementName=ChatListUserControl, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                        <Setter Property="Content" Value="{Binding ContactName}" />
                        <!--<Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border
                                        x:Name="border"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="20"
                                        SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <!--  Will Contain contactname, photo, message, message time  -->
                                                <RowDefinition Height="auto" />

                                                <!--  Will contain options such as archive chat, pin chat, delete etc.  -->
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>

                                            <Border
                                                x:Name="bdChild"
                                                Grid.RowSpan="2"
                                                Margin="-10"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Background="Transparent"
                                                CornerRadius="20" />

                                            <!--#region Contact details-->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <!--  Profile Photo  -->
                                                    <ColumnDefinition Width="auto" />

                                                    <!--  Contact Name & Last Message  -->
                                                    <ColumnDefinition />

                                                    <!--  Last Message Time  -->
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>

                                                <!--  Profile Photo  -->
                                                <Ellipse Width="50" Height="50">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding ContactPhotoUri, TargetNullValue={StaticResource DefaultImage}, FallbackValue={StaticResource DefaultImage}, UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill" />
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <!--#region Contact Name & Last Message-->

                                                <Grid Grid.Column="1" Margin="20,0">
                                                    <Grid.RowDefinitions>
                                                        <!--  Name  -->
                                                        <RowDefinition />

                                                        <!--  Last Message  -->
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>

                                                    <TextBlock FontSize="16" Text="{Binding ContactName}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="SemiBold" />

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontWeight" Value="Bold" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <TextBlock
                                                        Grid.Row="1"
                                                        Text="{Binding LastMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        TextTrimming="CharacterEllipsis">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="Normal" />

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>

                                                <!--#endregion-->

                                                <!--  Last Message Time  -->
                                                <Grid Grid.Column="2">
                                                    <TextBlock HorizontalAlignment="Right" Text="{Binding LastMessageTime}" />
                                                </Grid>
                                            </Grid>
                                            <!--#endregion-->

                                            <!--#region Options-->
                                            <!--  Height is 0 because we are going to show it on Chat Button checked event only  -->
                                            <Grid
                                                x:Name="OptionsGrid"
                                                Grid.Row="1"
                                                Height="0">

                                                <StackPanel>
                                                    <Separator Margin="0,10,0,0" BorderBrush="LightGray" />

                                                    <!--  Option Button  -->
                                                    <UniformGrid Grid.Column="1" Columns="4">

                                                        <!--  Pin / Unpin Chat button  -->
                                                        <Button CommandParameter="{Binding}">

                                                            <!--  To show UnPin icon and Command to unpint when the chat i pinned.  -->
                                                            <Button.Style>
                                                                <Style BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type Button}">
                                                                    <!--  Normal Unpinned Chat Style  -->
                                                                    <Setter Property="Content" Value="{StaticResource pinned}" />
                                                                    <Setter Property="Command" Value="{Binding DataContext.PinChatCommand, ElementName=ChatListUserControl}" />

                                                                    <!--  Style when Chat is pinned  -->
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                                                            <Setter Property="Content" Value="{StaticResource unpin}" />
                                                                            <Setter Property="Command" Value="{Binding DataContext.UnPinChatCommand, ElementName=ChatListUserControl}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>

                                                        <!--  Archive / UnArchive Chat button  -->
                                                        <Button CommandParameter="{Binding}">

                                                            <!--  To show Unarchive icon and Command to unarchive when the chat i pinned or unpinned.  -->
                                                            <Button.Style>
                                                                <Style BasedOn="{StaticResource IconButtonStyle}" TargetType="{x:Type Button}">
                                                                    <!--  Normal Chat Style  -->
                                                                    <Setter Property="Content" Value="{StaticResource archive}" />
                                                                    <Setter Property="Command" Value="{Binding DataContext.ArchiveChatCommand, ElementName=ChatListUserControl}" />

                                                                    <!--  Style when Chat is pinned  -->
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsArchived}" Value="True">
                                                                            <Setter Property="Content" Value="{StaticResource unarchive}" />
                                                                            <Setter Property="Command" Value="{Binding DataContext.UnArchiveChatCommand, ElementName=ChatListUserControl}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>

                                                        <Button Content="{StaticResource mute}" Style="{StaticResource IconButtonStyle}" />
                                                        <Button Content="{StaticResource trash}" Style="{StaticResource IconButtonStyle}" />
                                                    </UniformGrid>
                                                </StackPanel>
                                            </Grid>

                                            <!--#endregion-->
                                        </Grid>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="8">
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="OptionsGrid"
                                                            Storyboard.TargetProperty="Height"
                                                            To="50" />
                                                        <ColorAnimation
                                                            Storyboard.TargetProperty="(Background).Color"
                                                            From="Transparent"
                                                            To="#49A078" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="OptionsGrid"
                                                            Storyboard.TargetProperty="Height"
                                                            To="0" />
                                                        <ColorAnimation
                                                            Storyboard.TargetProperty="(Background).Color"
                                                            From="#49A078"
                                                            To="Transparent" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">

                                                        <ColorAnimation
                                                            Storyboard.TargetName="bdChild"
                                                            Storyboard.TargetProperty="(Background).Color"
                                                            From="Transparent"
                                                            To="#DCE1DE" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="8">

                                                        <ColorAnimation
                                                            Storyboard.TargetName="bdChild"
                                                            Storyboard.TargetProperty="(Background).Color"
                                                            From="#DCE1DE"
                                                            To="Transparent" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
        </DataTemplate>

        <Style x:Key="ArchiveButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid
                                    x:Name="bg"
                                    Grid.ColumnSpan="2"
                                    Opacity=".6" />

                                <!--  Back Icon  -->
                                <Path
                                    Margin="20,0"
                                    HorizontalAlignment="Left"
                                    Data="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}"
                                    Fill="Black"
                                    Style="{StaticResource {x:Type Path}}" />

                                <!--  Archived Chats Count  -->
                                <TextBlock
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontWeight="SemiBold">
                                    <Run Text="Archive (" />
                                    <Run Text="{Binding DataContext.ArchivedChats.Count, Mode=OneWay, ElementName=ChatListUserControl}" />
                                    <Run Text=")" />
                                </TextBlock>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>

                            <!--  If there is no chats archived than hide button.  -->
                            <DataTrigger Binding="{Binding DataContext.ArchivedChats.Count, Mode=OneWay, ElementName=ChatListUserControl}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#DCE1DE" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#DCE1DE" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Animation on chat item add  -->
        <ItemsPanelTemplate x:Key="dtItemPanel">
            <StackPanel>
                <b:Interaction.Behaviors>
                    <b:FluidMoveBehavior AppliesTo="Children" Duration="0:0:0.25" />
                </b:Interaction.Behaviors>
            </StackPanel>
        </ItemsPanelTemplate>
    </UserControl.Resources>

    <ScrollViewer Padding="15" HorizontalScrollBarVisibility="Disabled">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  All Chat & Pinned / Unpinned Chat  -->
            <Grid>
                <!--  We need to hide this grid when archived chat is open  -->
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility, ElementName=ArchivePanel}" Value="Visible">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.RowDefinitions>
                    <!--  Pinned / Unpinned Chat List  -->
                    <RowDefinition Height="auto" />

                    <!--  All Chats  -->
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!--  Pinned / Unpinned Chat List  -->
                <StackPanel>
                    <!--  Hide Pinned Chat Panel if No chats are pinned  -->
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FilteredPinnedChats.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <!--  Title  -->
                    <!--  Pinned Chats  -->
                    <StackPanel Orientation="Horizontal">

                        <Path
                            Data="{StaticResource pinned}"
                            Fill="Black"
                            Stroke="Black"
                            StrokeThickness="1" />

                        <TextBlock
                            Margin="10,0"
                            VerticalAlignment="Center"
                            FontWeight="SemiBold"
                            Text="Pinned" />
                    </StackPanel>

                    <!--  Filtered Pinned Chats List  -->
                    <!--  Since we want to show filtered chats on search  -->
                    <ItemsControl
                        Padding="15,0"
                        ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                        ItemsPanel="{StaticResource dtItemPanel}"
                        ItemsSource="{Binding FilteredPinnedChats}" />
                </StackPanel>

                <!--  All Chats  -->
                <StackPanel Grid.Row="1">
                    <!--  Title  -->
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource allchats}" Fill="Black" />

                        <TextBlock
                            Margin="10,0"
                            VerticalAlignment="Center"
                            FontWeight="SemiBold"
                            Text="All Chats" />
                    </StackPanel>

                    <!--  Filtered Chats List  -->
                    <!--  Since we want to show filtered chats on search  -->
                    <ItemsControl
                        Padding="15,10"
                        ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                        ItemsPanel="{StaticResource dtItemPanel}"
                        ItemsSource="{Binding FilteredChats}" />

                    <RadioButton
                        x:Name="btnOpenArchive"
                        GroupName="Archive"
                        Style="{StaticResource ArchiveButtonStyle}" />
                </StackPanel>
            </Grid>

            <!--  Archive Chats  -->
            <StackPanel x:Name="ArchivePanel">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnOpenArchive}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnCloseArchive}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Visibility, ElementName=btnCloseArchive}" Value="Collapsed">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <RadioButton
                    x:Name="btnCloseArchive"
                    Margin="0,15"
                    Content="{StaticResource back}"
                    GroupName="Archive"
                    IsChecked="True"
                    Style="{StaticResource ArchiveButtonStyle}" />

                <!--  Archived Chats  -->
                <ItemsControl
                    Background="Transparent"
                    BorderThickness="0"
                    ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                    ItemsPanel="{StaticResource dtItemPanel}"
                    ItemsSource="{Binding ArchivedChats}" />
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>